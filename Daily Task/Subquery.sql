use Subquery;
/* CREATE TABLE Salesman (salesman_id INT PRIMARY KEY,
                       name VARCHAR(50),
                       city VARCHAR(50),
                       commission DECIMAL(5,2));  */

/* INSERT INTO Salesman  VALUES (5001, 'James Hoog', 'New York', 0.15),
                             (5002, 'Nail Knite', 'Paris', 0.13),
							 (5005, 'Pit Alex', 'London', 0.11),
							 (5006, 'Mc Lyon', 'Paris', 0.14),
							 (5003, 'LausonHen', 'San Jose', 0.12),
							 (5007, 'Paul Adam', 'Rome', 0.13); */

/* CREATE TABLE Orders (ord_no INT PRIMARY KEY,
                     purch_amt DECIMAL(10,2),
                     ord_date DATE,
                     customer_id INT,
                     salesman_id INT,
                     FOREIGN KEY (salesman_id) REFERENCES Salesman(salesman_id)); */

/* INSERT INTO Orders  VALUES (70001, 150.5, '2012-10-05', 3005, 5002),
                           (70009, 270.65, '2012-09-10', 3001, 5005),
						   (70002, 65.26, '2012-10-05', 3002, 5001),
						   (70004, 110.5, '2012-08-17', 3009, 5003),
						   (70007, 948.5, '2012-09-10', 3005, 5002),
						   (70005, 2400.6, '2012-07-27', 3007, 5001),
						   (70008, 5760, '2012-09-10', 3002, 5001),
						   (70010, 1983.43, '2012-10-10', 3004, 5006),
						   (70003, 2480.4, '2012-10-10', 3009, 5003),
						   (70012, 250.45, '2012-06-27', 3008, 5002),
						   (70011, 75.29, '2012-08-17', 3003, 5007),
						   (70013, 3045.6, '2012-04-25', 3002, 5001); */
/* CREATE TABLE Customer (customer_id INT PRIMARY KEY,
                      cust_name VARCHAR(50),
                      city VARCHAR(50),
                      grade INT,
                      salesman_id INT,
                      FOREIGN KEY (salesman_id) REFERENCES Salesman(salesman_id));*/

/* INSERT INTO Customer VALUES(3002, 'Nick Rimando', 'New York', 100, 5001),
                           (3005, 'Graham Zusi', 'California', 200, 5002),
                           (3001, 'Brad Guzan', 'London', 100, 5005),
                           (3004, 'Fabian Johns', 'Paris', 300, 5006),
                           (3007, 'Brad Davis', 'New York', 200, 5001),
                           (3009, 'Geoff Camero', 'Berlin', 100, 5003),
                           (3008, 'Julian Green', 'London', 300, 5002),
                           (3003, 'Jozy Altidor', 'Moncow', 200, 5007); */

/* CREATE TABLE item_mast (PRO_ID INT PRIMARY KEY,
                        PRO_NAME VARCHAR(50),
                        PRO_PRICE DECIMAL(10,2),
                        PRO_COM INT); */

/* INSERT INTO item_mast  VALUES (101, 'Mother Board', 3200.00, 15),
                              (102, 'Key Board', 450.00, 16),
							  (103, 'ZIP drive', 250.00, 14),
							  (104, 'Speaker', 550.00, 16),
							  (105, 'Monitor', 5000.00, 11),
							  (106, 'DVD drive', 900.00, 12),
							  (107, 'CD drive', 800.00, 12),
							  (108, 'Printer', 2600.00, 13),
							  (109, 'Refill cartridge', 350.00, 13),
							  (110, 'Mouse', 250.00, 12); */

/* CREATE TABLE company_mast (COM_ID INT PRIMARY KEY,
                           COM_NAME VARCHAR(50)); */

/* INSERT INTO company_mast  VALUES (11, 'Samsung'),
                                 (12, 'iBall'),
								 (13, 'Epsion'),
								 (14, 'Zebronics'),
								 (15, 'Asus'),
								 (16, 'Frontech'); */

/* CREATE TABLE emp_details (EMP_IDNO INT PRIMARY KEY,
                         EMP_FNAME VARCHAR(50),
                         EMP_LNAME VARCHAR(50),
                         EMP_DEPT INT); */

/* INSERT INTO emp_details  VALUES (127323, 'Michale', 'Robbin', 57),
                                (526689, 'Carlos', 'Snares', 63),
								(843795, 'Enric', 'Dosio', 57),
								(328717, 'Jhon', 'Snares', 63),
								(444527, 'Joseph', 'Dosni', 47),
								(659831, 'Zanifer', 'Emily', 47),
								(847674, 'Kuleswar', 'Sitaraman', 57),
								(748681, 'Henrey', 'Gabriel', 47),
								(555935, 'Alex', 'Manuel', 57),
								(539569, 'George', 'Mardy', 27),
								(733843, 'Mario', 'Saule', 63),
								(631548, 'Alan', 'Snappy', 27),
								(839139, 'Maria', 'Foster', 57); */

/* CREATE TABLE emp_department ( DPT_CODE INT PRIMARY KEY,
                             DPT_NAME VARCHAR(50),
                             DPT_ALLOTMENT INT); */

/* INSERT INTO emp_department VALUES (57, 'IT', 65000),
                                  (63, 'Finance', 15000),
								  (47, 'HR', 240000),
								  (27, 'RD', 55000),
								  (89, 'QC', 75000); */

--1.Display Orders Issued by Salesman 'Paul Adam'
/* Select ord_no, purch_amt,ord_date,customer_id,salesman_id
from Orders
where salesman_id = (select  salesman_id from Salesman
                     where name = 'Paul Adam'); */


--2.Display Orders Generated by London-Based Salespeople
/* select ord_no, purch_amt,ord_date,customer_id,salesman_id
from Orders
where salesman_id = (select  salesman_id from Salesman
                     where city = 'London'); */

--3.Display Orders from Salespeople Handling Customer ID 3007
/* select ord_no, purch_amt,ord_date,customer_id,salesman_id
from Orders
where salesman_id in (select  salesman_id from Salesman
                     where customer_id = 3007); */

--4.Display Orders Exceeding Average Value on 10-Oct-2012
/* select ord_no, purch_amt,ord_date,customer_id,salesman_id
from Orders
where purch_amt > (select avg (purch_amt) from Orders
                   where ord_date = '2012-10-10'); */

--5.Display Orders Generated in New York City
/* select ord_no, purch_amt,ord_date,customer_id,salesman_id
from Orders
where salesman_id in (select  salesman_id from Salesman
                     where city = 'New York'); */

--6.Display Commission of Salespeople in Paris
/* select commission
from salesman
where city = 'Paris'; */

--7.Display Customers with ID Below 2001 Under Salesperson Mc Lyon
/* select customer_id 
from Orders
where customer_id < 2001 and salesman_id = (
                                       select salesman_id from salesman where name = 'Mc Lyon');  */

--8.Count of Customers with Above-Average Grades in New York City
/* select grade , count(*) as Count
from Customer
where grade > (select avg(grade) from Customer where city = 'New York')
group by grade
order by grade; */

--9.Display Orders of Salespeople with Maximum Commission
/*  SELECT ord_no, purch_amt, ord_date, salesman_id
FROM Orders
WHERE salesman_id = (
    SELECT salesman_id
    FROM Salesman
    WHERE commission = (
        SELECT MAX(commission)
        FROM Salesman)); */

--10.Display Customers Who Placed Orders on 17th August 2012
/* SELECT  ord_no, purch_amt,ord_date,customer_id,salesman_id,
    (SELECT cust_name FROM Customer WHERE customer_id = Orders.customer_id) AS cust_name
FROM Orders
WHERE ord_date = '2012-08-17' AND customer_id IN (SELECT customer_id FROM Customer); */


--11.Display Salespeople with More Than One Customer
/* 
SELECT s.salesman_id, s.name
FROM Salesman s
WHERE 1 < (
    SELECT COUNT(*)
    FROM Customer c
    WHERE c.salesman_id = s.salesman_id); */

--12.Display Orders with Amount Above Average Order Value
/* SELECT ord_no, purch_amt, ord_date, customer_id, salesman_id
FROM Orders
WHERE purch_amt > (SELECT AVG(purch_amt)
    FROM Orders ); */

--13.Display Orders with Amount ≥ Average Order Value
/* SELECT ord_no, purch_amt, ord_date, customer_id, salesman_id
FROM Orders
WHERE purch_amt >= (SELECT AVG(purch_amt)
    FROM Orders); */

--14.Show Order Sums by Date Exceeding Max Order by 1000
/* SELECT ord_date,SUM(purch_amt) AS total_amount, MAX(purch_amt) AS max_individual_order
FROM  Orders
GROUP BY ord_date
HAVING SUM(purch_amt) >= (
        SELECT MAX(purch_amt) + 1000.00
        FROM Orders o2
        WHERE o2.ord_date = Orders.ord_date); */

--15.Show All Customers If Any Are Located in London
/* SELECT * FROM Customer
WHERE EXISTS (
    SELECT 1
    FROM Customer 
    WHERE Customer.city = 'London'); */

--16.Find Salespeople Handling Multiple Customers
/*  SELECT salesman_id, name, city, commission
FROM Salesman s
WHERE ( SELECT COUNT(*)
    FROM Customer c
    WHERE c.salesman_id = s.salesman_id) > 1; */

--17.Find Salespeople Handling Only One Customer
/* SELECT s.salesman_id, s.name, s.city, s.commission
FROM Salesman s
WHERE (SELECT COUNT(*)FROM Customer c WHERE c.salesman_id = s.salesman_id) = 1; */

--18.Find Salespeople Handling Customers with Multiple Orders
/* SELECT DISTINCT s.salesman_id, s.name, s.city, s.commission
FROM Salesman s
WHERE s.salesman_id IN (SELECT c.salesman_id
    FROM Customer c
    WHERE c.customer_id IN (SELECT o.customer_id 
	FROM Orders o
        GROUP BY o.customer_id
        HAVING COUNT(*) > 1)); */

--19.Find Salespeople in Cities with at Least One Customer
/* SELECT s.salesman_id, s.name, s.city, s.commission
FROM Salesman s
WHERE s.city IN (SELECT DISTINCT city
    FROM Customer); */

--20.Find Salespeople Living in a Customer's City
/* SELECT salesman_id, name, city, commission
FROM Salesman
WHERE city IN (SELECT DISTINCT city FROM Customer WHERE city IS NOT NULL); */

--21.Find Salespeople with Names Alphabetically Before Customers
/* SELECT DISTINCT s.salesman_id, s.name, s.city, s.commission
FROM Salesman s
WHERE EXISTS (SELECT 1 FROM Customer c WHERE c.salesman_id = s.salesman_id AND s.name < c.cust_name); */

--22.Find Customers with Higher Grade Than Those Below New York
/* SELECT customer_id, cust_name, city, grade, salesman_id
FROM Customer
WHERE grade > ALL (SELECT grade FROM Customer WHERE city > 'New York'); */

--23.Find Orders Exceeding Any Order from September 10, 2012
/* SELECT ord_no, purch_amt, ord_date, customer_id, salesman_id
FROM Orders
WHERE purch_amt > ANY (SELECT purch_amt FROM Orders WHERE ord_date = '2012-09-10'); */

--24.Find Orders with Amount Less Than Any Order from London
/* SELECT ord_no, purch_amt, ord_date, customer_id, salesman_id
FROM Orders
WHERE purch_amt < ANY (SELECT o.purch_amt FROM Orders o JOIN Customer c ON o.customer_id = c.customer_id
WHERE c.city = 'London'); */

--25.Find Orders with Amount Less Than the Max Order from London
/* SELECT ord_no, purch_amt, ord_date, customer_id, salesman_id
FROM Orders
WHERE purch_amt < (SELECT MAX(o.purch_amt) FROM Orders o JOIN Customer c ON o.customer_id = c.customer_id
WHERE c.city = 'London'); */

--26.Find Customers with Higher Grades Than Those in New York
/* SELECT customer_id, cust_name, city, grade, salesman_id
FROM Customer
WHERE grade > ALL (SELECT grade FROM Customer WHERE city = 'New York'); */

--27.Calculate Total Order Amount by Salespeople in Customer Cities
/* SELECT s.name, s.city, (SELECT SUM(o.purch_amt) 
FROM Orders o 
WHERE o.salesman_id = s.salesman_id) AS total_order_amount
FROM Salesman s
WHERE s.city IN (SELECT DISTINCT city FROM Customer ); */

--28.Find Customers with Grades Different from Those in London
/* SELECT customer_id, cust_name, city, grade, salesman_id
FROM Customer
WHERE grade NOT IN (SELECT DISTINCT grade FROM Customer WHERE city = 'London'); */

--29.Find Customers with Grades Different from Those in Paris
/* SELECT customer_id, cust_name, city, grade, salesman_id
FROM Customer
WHERE grade NOT IN (SELECT DISTINCT grade FROM Customer WHERE city = 'Paris'); */

--30.Find Customers with Grades Different from Any in Dallas
/* SELECT customer_id, cust_name, city, grade, salesman_id
FROM Customer
WHERE NOT EXISTS (SELECT 1 FROM Customer d WHERE d.city = 'Dallas' AND d.grade = Customer.grade); */

--31.Calculate Average Price of Products by Manufacturer
/* SELECT c.COM_NAME AS Company,
    (SELECT AVG(i.PRO_PRICE) FROM item_mast i
     WHERE i.PRO_COM = c.COM_ID) AS "Average Price"
FROM company_mast c; */

--32.Calculate Average Price of Manufacturer's Products (≥ 350)
/* SELECT c.COM_NAME AS Company,a.avg_price AS "Average Price"
FROM company_mast c
JOIN (SELECT PRO_COM, AVG(PRO_PRICE) AS avg_price FROM item_mast
    GROUP BY PRO_COM
    HAVING AVG(PRO_PRICE) >= 350) a 
	ON 
	c.COM_ID = a.PRO_COM; */

--33.Find Most Expensive Product of Each Company
/* SELECT c.COM_NAME AS Company,i.PRO_NAME AS "Product Name",i.PRO_PRICE AS Price
FROM item_mast i
JOIN company_mast c 
ON
i.PRO_COM = c.COM_ID
WHERE i.PRO_PRICE = (SELECT MAX(i2.PRO_PRICE) FROM item_mast i2 WHERE i2.PRO_COM = i.PRO_COM); */

--34.Find Employees with Last Name Gabriel or Dosio
/* SELECT EMP_IDNO,EMP_FNAME,EMP_LNAME , EMP_DEPT
FROM emp_details 
WHERE EMP_LNAME IN ('Gabriel' , 'Dosio'); */

--35.Find Employees in Departments 89 or 63
/* SELECT EMP_IDNO,EMP_FNAME,EMP_LNAME , EMP_DEPT
FROM emp_details 
WHERE EMP_DEPT IN (89,63); */

--36.Find Employees in Departments with Allotment > Rs. 50000
/*  SELECT e.EMP_FNAME, e.EMP_LNAME
FROM emp_details e
WHERE e.EMP_DEPT IN (SELECT d.DPT_CODE FROM emp_department d WHERE d.DPT_ALLOTMENT > 50000); */

--37.Find Departments with Sanction Amount Above Average
/* SELECT DPT_CODE, DPT_NAME, DPT_ALLOTMENT
FROM emp_department
WHERE DPT_ALLOTMENT > (SELECT AVG(DPT_ALLOTMENT) FROM emp_department ); */

--38.Find Departments with More Than Two Employees
/* SELECT EDPT.DPT_NAME
FROM emp_details ED,emp_department EDPT  
WHERE ED.EMP_DEPT = EDPT.DPT_CODE
GROUP BY EDPT.DPT_NAME
HAVING COUNT(ED.EMP_IDNO) > 2; */

--39.Find Employees in Departments with Second Lowest Allotment
/* SELECT ED.EMP_FNAME, ED.EMP_LNAME
FROM emp_details ED,emp_department EDPT 
WHERE ED.EMP_DEPT = EDPT.DPT_CODE
AND EDPT.DPT_ALLOTMENT = (SELECT MIN(DPT_ALLOTMENT) FROM emp_department
                       WHERE DPT_ALLOTMENT > (SELECT MIN(DPT_ALLOTMENT) FROM emp_department)); */
